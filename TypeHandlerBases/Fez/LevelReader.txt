
using FezEngine;
using FezEngine.Structure;
using FezEngine.Structure.Scripting;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using System.Collections.Generic;

#w Console.WriteLine("debug: Level: Name: " + obj.Name);
Name Object<string>
Size Vector3
##r obj.Size = FmbUtil.ReadObject<Vector3>(reader, xnb, false);
##Because of the auto-generated ", false", we need to use the handler directly here.
##w FmbUtil.GetTypeHandler<Vector3>().Write(writer, obj.Size);
StartingPosition Object<TrileFace>
#w Console.WriteLine("debug: Level: SequenceSamplesPath: " + obj.SequenceSamplesPath);
SequenceSamplesPath Object<string>
#r Console.WriteLine("debug: Level: SequenceSamplesPath: " + obj.SequenceSamplesPath);
Flat Boolean
SkipPostProcess Boolean
BaseDiffuse Single
BaseAmbient Single
#w Console.WriteLine("debug: Level: GomezHaloName: " + obj.GomezHaloName);
GomezHaloName Object<string>
HaloFiltering Boolean
BlinkingAlpha Boolean
Loops Boolean
WaterType Object<LiquidType>
WaterHeight Single
SkyName String
#w Console.WriteLine("debug: Level: TrileSetName: " + obj.TrileSetName);
TrileSetName Object<string>
Volumes Object<Dictionary<int, Volume>>
Scripts Object<Dictionary<int, Script>>
SongName Object<string>
FAPFadeOutStart Int32
FAPFadeOutLength Int32
Triles Object<Dictionary<TrileEmplacement, TrileInstance>>
ArtObjects Object<Dictionary<int, ArtObjectInstance>>
BackgroundPlanes Object<Dictionary<int, BackgroundPlane>>
Groups Object<Dictionary<int, TrileGroup>>
NonPlayerCharacters Object<Dictionary<int, NpcInstance>>
Paths Object<Dictionary<int, MovementPath>>
Descending Boolean
Rainy Boolean
LowPass Boolean
MutedLoops Object<List<string>>
AmbienceTracks Object<List<AmbienceTrack>>
NodeType Object<LevelNodeType>
Quantum Boolean
OnDeserialization
